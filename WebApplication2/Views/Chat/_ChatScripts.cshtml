<script src="~/js/Chat_JS/jquery.min.js"></script>
<script src="~/Carousel/js/jquery-ui.min.js"></script>
<script src="~/Carousel/js/advCarousel.js"></script>
<script src="~/Carousel/js/cloud-carousel.1.0.5.js"></script>
<script>
    $(".messages").animate({ scrollTop: "99999" }, "fast");

    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

// При добавяне на ново съобщение
    connection.on("NewMessage", function (message) {
        var chatClass = (message.username != '@ViewBag.CurrentUsername') ? 'chat chat-left' : 'chat';
        var chatInfo = getChatInfo(message, chatClass);
        $("#messagesList").append(chatInfo);

        // Превъртете контейнера на дъното
        var container = document.getElementById("messagesList");
        container.scrollTop = container.scrollHeight;
    });

    $('#sendButton').click(function () {
        var message = $('#messageInput').val();

        var minLength = 2;
        var maxLength = 300;

        if (message === null || message === '') {
            alert('Cannot Publish Empty Message.');
            return;
        }
        if (message.length < minLength || message.length > maxLength) {
            alert(`Message should have minimum length ${minLength} and maximum length ${maxLength}.`);
            return;
        }

        console.log("Sending message: " + message);
        connection.invoke('Send', message);
        $('#messageInput').val('');
    });

// Добавяне на слушател за клавиша Enter
    $('#messageInput').on('keydown', function (e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            $('#sendButton').click();
        }
    });

    connection.start()
        .then(function () {
            console.log("Connected!");
        })
        .catch(function (err) {
            return console.error(err.toString());
        });

    function escapeHtml(unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }

    // Функция за извличане на чат информация

    function getChatInfo(message, chatClass) {
        let userImage = (message.userImageUrl != null) ? message.userImageUrl : '/images/Profile-Avatar.png';
        return `
                  <div class="panel-body" style="overflow-y: auto; max-height: 500px;">
                                <div class="${chatClass}">
                                    <div class="chat-avatar">
                                        <a class="avatar avatar-online" data-toggle="tooltip" href="#" data-placement="right" title="" data-original-title="${message.username}">
                                            <img src="${userImage}" alt="${message.username}">
                                            <i></i>
                                        </a>
                                    </div>
                                    <div class="chat-body">
                                        <div class="chat-content">
                                            <p><strong>${message.username}: </strong>${message.text}</p>
                                            <time class="chat-time" datetime="${message.createdOn}">${message.createdOn}</time>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            `;
    }

    $('#refreshButton').click(function () {
        $.get('/Chat/GetChatMessages')
            .done(function (data) {
                console.log(data);
                $('#historyMessagesList').empty();
                data.$values.forEach(function (message) {
                    var chatClass = (message.username != '@ViewBag.CurrentUsername') ? "chat chat-left" : "chat";
                    var newMessage = `
                    <div class="${chatClass}">
                        <div class="chat-avatar">
                            <a class="avatar avatar-online" data-toggle="tooltip" href="#" data-placement="right" title="" data-original-title="${message.username}">
                                <img src="${message.userImageUrl}" alt="${message.username}">
                                <i></i>
                            </a>
                        </div>
                        <div class="chat-body">
                            <div class="chat-content">
                                <p><strong>${message.username}: </strong>${message.text}</p>
                                <time class="chat-time" datetime="${message.createdOn}">${message.createdOn}</time>
                            </div>
                        </div>
                    </div>
                `;
                    $('#historyMessagesList').append(newMessage);
                });
            })
            .fail(function (jqXHR, textStatus, error) {
                console.error("Error fetching chat messages: " + textStatus, error);
            });
    });

    $(document).ready(function () {
        $.ajax({
            url: '/Chat/MarkAsRead',
            type: 'POST',
            success: function (response) {
                console.log(response);
            },
            error: function (error) {
                console.log(error);
            }
        });
    });

</script>



